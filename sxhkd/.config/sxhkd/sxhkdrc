# theoretically wm-independent bindings

mod4 + alt + shift + slash
   systemctl suspend

mod4 + ctrl + shift + slash
   systemctl suspend

mod4 + {1-9}
   ~/.scripts/window/act.sh --focus {1-9}

mod4 + shift + {1-9}
   ~/.scripts/window/act.sh --send {1-9}

mod4 + alt + {1-9}
   ~/.scripts/window/act.sh --carry {1-9}

mod4 + {_, shift, alt} + minus
   act.sh {--focus, --send, --carry} empty

mod4 + {comma, period}
   act.sh --focus {prevfilled,nextfilled}

mod4 + alt + {comma, period}
   act.sh --carry {prevfilled, nextfilled}

# for gesture stuff
mod4 + {alt + shift, shift} + period
   act.sh {--carry, --focus} empty


{F4, shift + F4}
   act.sh {--close, --kill}

mod4 + Return
   urxvt -fn xft:ubuntumono:size=38 -g 60x17

mod4 + alt + Return
   kitty -o font_size=32 # urxvt -fn xft:ubuntumono:size=38 -g 60x17

mod4 + shift + Return
   emacsclient -create-frame --alternate-editor='' -e "(shell)"


# make sxhkd reload its configuration files:
mod4 + shift + Escape
   pkill -USR1 -x sxhkd

# set keyboard as expected
mod4 + u ; x
   xmodmap ~/.config/xmodmap

mod4 + u ; {shift + x, shift + c}
   setxkbmap -layout {us, ca} ;\
   xmodmap ~/.config/xmodmap

# maximize
mod4 + shift + m
   act.sh -m toggle

mod4 + Up
   act.sh -Y toggle

mod4 + shift + Up
   act.sh -X toggle

# todo: snap left, snap right

mod4 + shift + d
   act.sh --draw

# kill notifications
~Escape
   dunstctl close-all ; pkill -f 'feh.*thumbnail' ; bspc node any.sticky -g hidden=on


# bluetooth
mod4 + alt + {b, shift + b}
   {bluetoothctl power on && bluetoothctl connect, bluetoothctl power off && bluetoothctl disconnect} $(bluetoothctl paired-devices | cut -f2 -d' ' | head -n 1)

# open emacs
mod4 + e
   (pgrep emacsclient && findoropen emacs) || emacsclient -create-frame

mod4 + shift + e
   emacsclient -create-frame

# new gitlab issue
mod4 + shift + g
   new_issue.py

# show windows
{mod4 + x, XF86Search}
   rofi -show combi -combi-modi "window,drun" -modi combi -theme ~/.local/share/rofi/themes/spotlight.rasi

# reports
mod4 + r ; {b, d, n, p, shift + p, t, u, v}
   notify-hint {battery "$(acpi | sed 's/%\,/%\n/')", \
                date    "$(today-with-suffix-and-time | sed 's/ - /\n/' | \
                           col 1-2 -d '\,')",\
		network "$(ping -c 1 gnu.org 2>&1)", \
		pomo    "$(pomo-time.sh name)<br/>$(pomo-time.sh) remaining", \
                pomo    "$(plural? $(todays-pomos | grep -cE ^Pomodoro) \
                             pomo) today:<br/>" \
                        "$(todays-pomos | drop-first 1)", \
		tester  "tester<br/>tester", \
		uptime  "$(uptime)", \
		volume  "volume: $(volume query)"}


mod4 + r ; {l, m}
   {ntfy-current-couplet 4, reload-cover} # this one already sends a notification

# pause / unpause dunst

mod4 + backslash
   ;dunstctl set-paused false


@mod4 + backslash
   (sleep 1; [ $(dunstctl is-paused) = false ] && dunstctl set-paused true)

mod4 + shift + backslash
   dunstctl set-paused toggle


#open non-duplicate programs
mod4 + {a, c, shift + f, s, shift + t, v, w, z}
   findoropen {anki, chromium, feh, signal signal-desktop /opt/Signal/signal-desktop, thunderbird, mpv, "$WEB", zathura}

# open signal
# mod4 + s
   # if /bin/pgrep -x signal-desktop; then \
      # findoropen signal signal-desktop /opt/Signal/signal-desktop; \
   # else \
      # signal-desktop; \
   # fi

# open ncmpcpp
mod4 + m
   (pgrep -x ncmpcpp || bspc rule -a '*' -o desktop='^7' follow=on); TERMINAL='urxvt -fn xft:ubuntumono:size=40' findoropen -t ncmpcpp

# find the gitlab window, the pomodoro window
mod4 + {g, y}
   wmctrl -a {gitlab, pomodoro}

mod4 + shift + z
   findoropen zoom
#     (pgrep teams && findoropen teams) || findoropen zoom


# rename a selected window for findoropen or rofi or otherwise
mod4 + shift + r
   wname_entry="$(rofi -dmenu)" ;\
   xprop -format _NET_WM_NAME 8u -set _NET_WM_NAME "$wname_entry"

mod4 + alt + m
   mpcsel


# files

# bg
mod4 + alt + f
   ~/.config/.fehbg

# special keys

XF86Audio{LowerVolume,RaiseVolume}
   pactl set-sink-volume @DEFAULT_SINK@ {-,+}600 ; \
      dunst-is-shown && notify-hint volume "volume: $(volume query)"

   # volume {-, +}

shift + XF86Audio{LowerVolume,RaiseVolume}
   pactl set-sink-volume @DEFAULT_SINK@ {-,+}600 ; \
      dunst-is-shown && notify-hint volume "volume: $(volume query)"

{_, shift} + XF86AudioMute
   volume {toggle,mute} ; \
      dunst-is-shown && notify-hint volume "volume: $(volume query)"

XF86Audio{Play,Pause}
   mpvisrunning="$(/bin/pgrep -u "$USER" mpv)" ;\
   if [ -n "$mpvisrunning" ]; then \
      echo 'mpv running';\
      findoropen mpv ;\
      mpvc toggle || (sleep 0.1 ; xdotool key space) ;\
   else \
      echo 'no mpv';\
      mpc toggle ;\
   fi

# It works! :)
{_, shift +} XF86AudioPrev
   mpvisrunning="$(/bin/pgrep mpv)" ;\
   if [ -n "$mpvisrunning" ]; then \
      findoropen mpv ;\
      {mpvc seek -10s || (sleep 0.1 ; xdotool key --clearmodifiers Left); else mpc-prev-or-restart 7, \
       mpvc seek -60s || (sleep 0.1 ; xdotool key --clearmodifiers Down); else mpc seek 0} ;\ 
   fi
# # 's/mpvc seek -60s/mpvc prev/' if you want to make use of the playlist features


{_, shift +} XF86AudioNext
   mpvisrunning="$(/bin/pgrep mpv)" ;\
   if [ -n "$mpvisrunning" ]; then \
      findoropen mpv ;\
      {mpvc seek +10s || (sleep 0.1 ; xdotool key --clearmodifiers Right); else mpc next, \
       mpvc seek +60s || (sleep 0.1 ; xdotool key --clearmodifiers Up); else mpc random; mpc next} ;\ 
   fi


# XF86{TaskPane,RotateWindows}
   # ~/.local/bin/rotate-script.sh {invert, normal}


### system utilities:

# load / restart the bar
mod4 + F3
   bar

# take screenshots to clipboard
{_, shift +} F9
   sleep 0.2 && screenshot {clipboard --select, clipboard} 

# save screenshots
mod4 + {_, shift} + F9
   sleep 0.2 && screenshot {--select,  } 

mod4 + shift + u
   rofi -dmenu | xargs unicode.py | clip

# mod4 + alt + e
#    emojicopy $(rofi -dmenu)

mod4 + alt + e
   emojisel-interactive

mod4 + alt + i
   ipacopy

mod4 + u ; mod4 + alt + i
   repeat 4 ipacopy -a

mod4 + u ; mod4 + u ; mod4 + alt + i
   clip -c; repeat 4 ipacopy -a

{F10, F11, F12, shift+F12}
   volume {-, +, toggle, mute}

# mpc
mod4 + {Prior, Next}
   {mpc-prev-or-restart 7, mpc next}

mod4 + shift + {Prior, Next}
   mpc {seek 0, toggle}

mod4 + ctrl + {Up, Down}
   mpc volume {+2, \-2}; \
      dunst-is-shown && \
         notify-hint volume "mpc $(mpc volume)"

mod4 + alt + {Prior, Next, shift + Prior, shift + Next}
   mpvc {seek -30s, seek +30s, prev, next}



mod4 + ctrl + {Prior, Next, shift + Prior, shift + Next}
   mpvc {seek -2s, seek +2s, seek 0%, toggle}

