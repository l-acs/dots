#
# wm independent hotkeys
#

# terminal emulator
super + Return
	urxvt -e tmux -f ~/.config/tmux/tmux.conf


# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
{_,shift + }F4
	 ~/.scripts/window/act.sh -{c,k}
	 #	bspc node -{c,k}

# alternate between the tiled and monocle layout
#super + m
#	bspc desktop -l next

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {@space, shift + f}
      bspc node -t {\~floating, \~fullscreen}


# not working
# super + shift + @space
#       if $(bspc rule -l | grep -q '*:* => state=floating') ; then \
#       	 bspc rule -r ^$(bspc rule -l | wc -l) ; \ #remove the rule
#       else \
#          bspc rule -a \*:\* state=floating ; \
#       fi   




#if it's pseudo tiled, tile it; otherwise, pseudo tile it
super + t
	if [ -n "$(bspc query -N -n focused.pseudo_tiled)" ]; then \
	   bspc node focused -t tiled; \
	else \
	     bspc node focused -t pseudo_tiled; \
	fi
	     




# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

#useful but didn't use
# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous non-empty desktop in the current monitor
super + bracket{left,right}
      bspc desktop -f {prev,next}.local.occupied

# focus next/previous empty desktop in the current monitor
super + shift + bracket{left,right}
      bspc desktop -f {prev,next}.local.!occupied


# focus the next/previous non-empty desktop in the current monitor
super + {comma, period}
      bspc desktop -f {prev,next}.local.occupied

# focus next/previous empty desktop in the current monitor
super + shift + {comma, period}
      bspc desktop -f {prev,next}.local.!occupied

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last

# cycle through nodes in desktop
alt + {_, shift+} Tab
    bspc node -f {next,prev}.local.leaf

# cycle through desktops in desktop
super + {_, shift+} Tab
    bspc desktop -f {next,prev}.local.occupied



# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9}
	~/.scripts/window/act.sh {--capturefocuscapture,-s} '{1-9}'

super + {_, shift +} 0
      bspc {desktop -f, node -d} next.local.!occupied

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
#super + {Left,Down,Up,Right}
	#bspc node -v {-20 0,0 20,0 -20,20 0}




#right click magic
~button3
	(isroot || isapplication URxvt emacs -v ncmpcpp) && ( pkill 9menu || clickbait )

~button1
	(isroot || isapplication URxvt emacs -v ncmpcpp) && killall 9menu



# bindings sans modifier
{~f, ~m, ~s, ~e, ~t, ~Return}
	haswindows || {firefox, findoropen deezer ncmpcpp, rofi -show combi -combi-modi "drun\,window", eval $VISUAL, urxvt -e tmux -f ~/.config/tmux/tmux.conf, urxvt -e tmux -f ~/.config/tmux/tmux.conf}


# kill notifications
~Escape
	dunstctl close-all





#file browsers
super + {b, shift + b}
      {browse, pcmanfm}


#open emacs
super + e
      eval $VISUAL



#open non-duplicate programs
super + {m,f,shift+s,shift+v}
      findoropen {deezer ncmpcpp,firefox,signal signal-desktop,vim}


#files

#cover art, notes, manpdf
super + shift + {a,n, p, y}
      {feh --scale-down -g 599x377 --image-bg black --reload=1 $HOME/.scripts/output/cover.jpg,jot, zathura $HOME/.scripts/output/man.pdf, td}






#open selectors
super + {n, p, s, v, y}
      {jsel, dmenumanpdf, rofi -show combi -combi-modi "drun\,window", vsel, tdsel}





#function keys
F2
	~/.scripts/window/act.sh -d




# reload the bar
super + F3
	bar



#special keys

XF86Calculator
	qalculate-gtk


#page up + mod = bright up
{super, control, alt} + Prior
     for i in $(xrandr -q | grep ' connected' | cut -f1 -d' ' ); do \
     	 bright $i + ; \
     done

#page down + mod = bright down
{super, control, alt} + Next
     for i in $(xrandr -q | grep ' connected' | cut -f1 -d' ' ); do \
     	 bright $i - ; \
     done

#shift + page up + mod = force bright up
shift + {_,super, control, alt} + Prior
    xbright +

#shift + page down + mod = force bright down
shift + {_,super, control, alt} + Next
    xbright -



#take screenshots????
F8
      sleep 0.2 && screenshot --select

shift + F8
      screenshot




{F10, F11}
      volume {-,+}
	
#{XF86AudioMute, shift + XF86AudioMute}
{F12, shift + F12}
      volume {toggle, mute}



super + {shift + Up, shift + Down, shift + Left, Left, Right, shift + Right}
	mpc {volume +2, volume -2, seek 0, prev, next, toggle}




#toggle space as ctrl
super + equal
      s2cctl toggle

